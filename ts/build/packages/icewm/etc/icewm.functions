#! /bin/sh

wm_workspaces ()
{
	local wmworkspace
	if [ "$2" -gt 1 ]; then
		let wmworkspace=$2-1
		CMD="icesh -window root setWorkspace $wmworkspace ; $1"
	fi
}

wm_menu ()
{
	mkdir -p ${HOME}/.icewm
	if is_disabled $MENU_SHOWCLOCK ; then
		echo "TaskBarShowClock=0" >> ${HOME}/.icewm/prefoverride
	fi
	if is_enabled $HIDE_CONTROLS ; then
		echo "TitleBarHeight=0" >> ${HOME}/.icewm/prefoverride
		echo "ShowWorkspaceStatus=0"  >> ${HOME}/.icewm/prefoverride
		echo "UseRootButtons=0"  >> ${HOME}/.icewm/prefoverride
		echo "ShowTaskBar=0"  >> ${HOME}/.icewm/prefoverride
		echo "ShowSettingsMenu=0"  >> ${HOME}/.icewm/prefoverride
		echo "ShowThemesMenu=0"  >> ${HOME}/.icewm/prefoverride
		echo "BorderSizeX=0"  >> ${HOME}/.icewm/prefoverride
		echo "BorderSizeY=0"  >> ${HOME}/.icewm/prefoverride
		echo "DlgBorderSizeX=0"  >> ${HOME}/.icewm/prefoverride
		echo "DlgBorderSizeY=0"  >> ${HOME}/.icewm/prefoverride
		echo "CornerSizeX=0"  >> ${HOME}/.icewm/prefoverride
		echo "CornerSizeY=0"  >> ${HOME}/.icewm/prefoverride
	fi
	MENU_FILE=/tmp/$WMNAME.menu
	TMPMENU=/tmp/$WMNAME.tmp
	MENU_ICONS="${HOME}/.icewm/winoptions"
	touch $MENU_FILE
	if is_enabled $MENU_SHOWAPPS ; then
		(cat $WKDIR/session | sort ) |
			while read type title screen position workspace autostart custom icon server options user pass_enable gate gate_user; do
				if [ "$server" == "." ]; then unset server ; fi
				if [ "$options" == "." ]; then unset options ; fi
				if [ "$user" == "." ];          then unset user         ;fi
				if [ "$pass_enable" == "." ];   then unset pass_enable  ;fi
				if [ "$gate" == "." ];          then unset gate         ;fi
				if [ "$gate_user" == "." ];     then unset gate_user    ;fi
					case "$icon" in
						ON|MENU)
							echo "$type.icon: $type" >> $MENU_ICONS
							echo "prog \"$title\" \"$type\" pkg $MAXIMIZE_DEFAULT $type \"$server\" \"$options\" \"$workspace\" \"$user\" \"$pass_enable\" \"$gate\" \"$gate_user\"" >> $MENU_FILE
						;;
						SUBMENU|SUBMENUONLY)
							if [ "$lasttype" != "$type" ] ; then
								lasttype=$type
								echo $type >> /tmp/typelist
							fi
							echo "prog \"$title\" \"$type\" pkg $MAXIMIZE_DEFAULT $type \"$server\" \"$options\" \"$workspace\" \"$user\" \"$pass_enable\" \"$gate\" \"$gate_user\"" >> /tmp/"$type"_menu
						;;
					esac
			done
			if [ -e /tmp/typelist ]; then
				(cat /tmp/typelist ) |
					while read type; do
						echo "menu \"`make_caps $type` Connections\" "$type"_menu {" >> $MENU_FILE
						cat /tmp/"$type"_menu >> $MENU_FILE
						echo "}" >> $MENU_FILE
						rm /tmp/"$type"_menu
					done
					rm /tmp/typelist
			fi
			if [ "`make_caps $ICONMODE`" == "AUTO" ]; then
				touch $TMPMENU
				if [ -e /lib/menu ]; then
					cat /lib/menu/* > $TMPMENU
				fi
				if [ ! -z $MENU_EXTRA_DIR ]; then
					if [ "`make_caps x$MENU_EXTRA`" == "XONLY" ]; then
						if [ ! -z `ls -A  $MENU_EXTRA_DIR` ]; then
							cat $MENU_EXTRA_DIR/* > $TMPMENU
						fi
					elif [ ! -z `ls -A $MENU_EXTRA_DIR` ]; then
						cat $MENU_EXTRA_DIR/* >> $TMPMENU
					fi
				fi
				(cat $TMPMENU) |
					while read entry; do
						case "$entry" in
							\#*|"") continue ;;
						esac
						menu=""
						echo $entry > /tmp/entry
						. /tmp/entry
						echo "$package.icon: $package" >> $MENU_ICONS
						if [ -z "$menu" ]; then
							echo "prog \"$title\" \"$package\" $command" >> $MENU_FILE
						else
							if [ ! -f "/tmp/${menu}_menu" ]; then
								echo $menu $menu >> /tmp/typelist
							fi
							echo "prog \"$title\" \"$package\" $command" >> /tmp/"$menu"_menu
						fi
					done
				if [ -e /tmp/entry ]; then
					rm /tmp/entry
				fi
				rm $TMPMENU
			fi
	fi
	if [ -e /tmp/typelist ]; then
		( sort /tmp/typelist ) |
			while read type menu; do
				echo "menu $menu "$type"_menu {" >> $MENU_FILE
				cat /tmp/"$type"_menu >> $MENU_FILE
				echo "}" >> $MENU_FILE
				rm /tmp/"$type"_menu
			done
			rm /tmp/typelist
	fi
	if is_enabled $MENU_SHOWRES && [ -e /var/log/applications/resolutions ]; then
		echo "menu Resolution" "resolution_menu {" >> $MENU_FILE
		for res in `cat /var/log/applications/resolutions` ; do
			echo "prog \"$res\" \"$res\" setres $res" >> $MENU_FILE
		done
		echo "}" >> $MENU_FILE
	fi
	if is_enabled $MENU_SHOWABOUT && [ -e /bin/about ]; then
		echo "prog \"About\" \"about\" about" >> $MENU_FILE
	fi
	if is_enabled $MENU_SHOWLOGOUT ; then
		echo "menu Logout" "logout_menu {" >> $MENU_FILE
		if is_enabled $MENU_LOGOUT ; then
			echo "prog \"Logout\" \"logout\" logout" >> $MENU_FILE
		fi
		echo "prog \"Shutdown\" \"shutdown\" poweroff" >> $MENU_FILE
		echo "prog \"Reboot\" \"reboot\" reboot" >> $MENU_FILE
		echo "}" >> $MENU_FILE
	fi
	cat $MENU_FILE > ${HOME}/.icewm/menu
	rm $MENU_FILE
}
